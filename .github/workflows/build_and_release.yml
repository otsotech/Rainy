name: Build and Release Executables

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write  # Allows creating releases and uploading assets

jobs:
  build:
    name: Build Executables
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install pyinstaller PyQt6 pygame pillow

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libegl1-mesa libfontconfig1 libxkbcommon-x11-0

      - name: Generate Icons
        run: python compiler.py --generate-icon

      - name: Build Executable on Windows
        if: runner.os == 'Windows'
        run: |
          pyinstaller --onefile --windowed --name Rainy --icon assets/icons/app.ico --add-data "assets;assets" main.py
        shell: cmd

      - name: Build Executable on macOS
        if: runner.os == 'macOS'
        run: pyinstaller --onefile --windowed --name Rainy --icon assets/icons/app.icns --add-data "assets:assets" main.py

      - name: Build Executable on Linux
        if: runner.os == 'Linux'
        run: pyinstaller --onefile --windowed --name Rainy --icon assets/icons/app.png --add-data "assets:assets" main.py

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Rainy-${{ matrix.os }}
          path: |
            dist/Rainy${{ runner.os == 'Windows' && '.exe' || '' }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref }}
          name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          artifacts: artifacts/**/*
          token: ${{ secrets.GITHUB_TOKEN }}
